//go:build wasm

package gosite

// Site manages the global state of the website for the frontend (WASM).
// It's a lightweight version focused on rendering, not file generation.
type Site struct {
	Cfg   *Config
	pages []*Page
}

// New creates a new site manager for the frontend.
func New(cfg *Config) *Site {
	if cfg.ColorScheme == nil {
		cfg.ColorScheme = DefaultColorScheme()
	}
	return &Site{
		Cfg:   cfg,
		pages: make([]*Page, 0),
	}
}

// AddCSS is a no-op in the frontend.
// CSS is handled by the stylesheet generated by the backend.
func (s *Site) AddCSS(css string) {}

// AddJS is a no-op in the frontend.
// JS is handled by the script generated by the backend.
func (s *Site) AddJS(js string) {}

// Generate is not available in the frontend.
// This function is backend-specific and would cause a compile error if called.
// func (s *Site) Generate() error { ... }
